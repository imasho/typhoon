# Makefile

.SUFFIXES : .c .o .lo

LIBSRC=json_value.cc json_import.cc json_export.cc json_exception.cc
BINSRC=jsontest.cc
LIBOBJ=$(LIBSRC:%.cc=%.o)
SHAREDOBJ=$(LIBSRC:%.cc=%.lo)
BINOBJ=$(BINSRC:%.cc=%.o)

BINTARGET=jsontest
LIBTARGET=libjson
VERSION=1.0

CC=@CXX@
INSTALL=@prefix@

$(LIBTARGET) : $(LIBTARGET).so.$(VERSION) $(LIBTARGET).a
$(LIBTARGET).so.$(VERSION) : $(SHAREDOBJ)
	$(CC) -shared -Wl,-soname,$(LIBTARGET).so.$(VERSION) -o $(LIBTARGET).so.$(VERSION) $(SHAREDOBJ)
$(LIBTARGET).a : $(LIBOBJ)
	ar r $(LIBTARGET).a $(LIBOBJ)
	ranlib $(LIBTARGET).a
json_value.lo : json_value.cc
	$(CC) -fPIC -Wall -c -o $@ $?
json_import.lo : json_import.cc
	$(CC) -fPIC -Wall -c -o $@ $?
json_export.lo : json_export.cc
	$(CC) -fPIC -Wall -c -o $@ $?
json_exception.lo : json_exception.cc
	$(CC) -fPIC -Wall -c -o $@ $?
$(BINTARGET) : $(LIBTARGET).a $(BINOBJ)
	$(CC) -o $(BINTARGET) $(BINOBJ) $(LIBTARGET).a
.c.o : 
	$(CC) -Wall -c $<


# make options
all: $(BINTARGET) $(LIBTARGET).so.$(VERSION)

test: $(BINTARGET)
	./$(BINTARGET)

clean:
	rm -fr *.o *.lo *.a *.so.*
	rm -fr $(BINTARGET)
distclean:
	rm -fr Makefile *.o *.lo *.a *.so.*
	rm -fr $(BINTARGET)

install:
	cp -r $(LIBTARGET).a $(INSTALL)/lib/
	cp -r $(LIBTARGET).so.$(VERSION) $(INSTALL)/lib/
	ln -f -s libjson.so.$(VERSION) $(INSTALL)/lib/$(LIBTARGET).so
	cp -r json*.h $(INSTALL)/include/
